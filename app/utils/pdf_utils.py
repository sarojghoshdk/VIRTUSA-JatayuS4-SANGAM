# app/utils/pdf_utils.py
from flask import send_file, session
from io import BytesIO
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter, A4, landscape

import pdfkit
from flask import render_template_string, send_file
from io import BytesIO
from pdfkit.configuration import Configuration
import io

from flask_session import Session

def generate_fd_pdf():
    config = pdfkit.configuration(wkhtmltopdf=r'C:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe')

    interest_rate = session.get('interest_rate', 'N/A')
    positive_reasons = session.get('positive_reasons', [])
    negative_reasons = session.get('negative_reasons', [])
    summary_table = session.get('summary_table', [])
    total_score = session.get('total_score', 'N/A')
    favorability = session.get('favorability', 'N/A')
    overall_profile = session.get('overall_profile', 'N/A')
    image_base64 = session.get('image_base64', '')
    customer_name = session.get('customer_name', 'Unknown')
    customer_id = session.get('customer_id', 'Unknown')

    if 'interest_rate' not in session:
        return "Session data not found. Please generate result first by submitting the form."

    html = render_template_string("""
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <title>FD Report</title>
        <style>
            body { font-family: Arial, sans-serif; padding: 30px; color: #333; }
            h1 { text-align: center; color: #2c3e50; border-bottom: 2px solid #ddd; padding-bottom: 10px; }
            .section { margin-bottom: 25px; }
            h3 { color: #1a5276; border-bottom: 1px solid #ccc; padding-bottom: 4px; }
            table { width: 100%; border-collapse: collapse; margin-top: 10px; }
            th, td { border: 1px solid #999; padding: 8px; text-align: center; }
            th { background-color: #f2f2f2; }
            ul { padding-left: 20px; list-style-type: square; }
            .summary-chart img {
                margin-top: 15px;
                max-width: 100%;
                border: 1px solid #ccc;
                border-radius: 6px;
            }
            .info { background-color: #f9f9f9; padding: 10px; border-left: 5px solid #1a5276; }
            .footer {
                margin-top: 30px;
                font-size: 12px;
                color: #777;
                text-align: center;
                border-top: 1px solid #ccc;
                padding-top: 10px;
            }
        </style>
    </head>
    <body>

        <h1>FD Interest Rate Report</h1>

        <div class="section info">
            <strong>Customer Name:</strong> {{ customer_name }}<br>
            <strong>Customer ID:</strong> {{ customer_id }}<br>
            <strong>Offered Interest Rate:</strong> {{ interest_rate }}
        </div>

        <div class="section">
            <h3>Favorable Factors</h3>
            <ul>
                {% for reason in positive_reasons %}
                    <li>{{ reason }}</li>
                {% else %}
                    <li>No favorable factors identified.</li>
                {% endfor %}
            </ul>
        </div>

        <div class="section">
            <h3>Unfavorable Factors</h3>
            <ul>
                {% for reason in negative_reasons %}
                    <li>{{ reason }}</li>
                {% else %}
                    <li>No unfavorable factors identified.</li>
                {% endfor %}
            </ul>
        </div>

        <div class="section">
            <h3>Reasoning Summary</h3>
            <table>
                <tr><th>Parameter</th><th>Score</th></tr>
                {% for row in summary_table %}
                    <tr><td>{{ row.parameter }}</td><td>{{ row.score }}</td></tr>
                {% endfor %}
                <tr><td><strong>Total Score</strong></td><td><strong>{{ total_score }}</strong></td></tr>
            </table>
            <p><strong>Favorability:</strong> {{ favorability }}<br>
            <strong>Overall Profile:</strong> {{ overall_profile }}</p>
        </div>

        <div class="section summary-chart">
            <h3>Summary Chart</h3>
            {% if image_base64 %}
                <img src="data:image/png;base64,{{ image_base64 }}">
            {% else %}
                <p>No chart available</p>
            {% endif %}
        </div>

        <div class="footer">
            <p>Generated by FD Interest Rate Prediction System</p>
        </div>

    </body>
    </html>
    """, interest_rate=interest_rate, positive_reasons=positive_reasons,
         negative_reasons=negative_reasons, summary_table=summary_table,
         total_score=total_score, favorability=favorability, overall_profile=overall_profile,
         image_base64=image_base64, customer_name=customer_name, customer_id=customer_id)

    pdf = pdfkit.from_string(html, False, configuration=config)

    return send_file(BytesIO(pdf), as_attachment=True, download_name="FD_Report.pdf", mimetype='application/pdf')


def generate_loan_pdf():
    customer_name = session.get("customer_name", "N/A")
    customer_id = session.get("customer_id", "N/A")
    loan_eligibility = session.get("eligible", "N/A")
    interest_rate = session.get("interest_rate", "N/A")
    max_loan_amount = session.get("max_loan", "N/A")
    reasons_table = session.get("reasons_table", [])
    suggestions = session.get("suggestions", [])
    bar_chart_base64 = session.get("bar_chart_base64", "")

    html_content = f"""
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Loan Evaluation Report</title>
    <style>
        body {{
            font-family: 'Times New Roman';
            margin: 20px;
            padding: 0;
            background-color: #f8f9fa;
            color: #333;
            font-size: 14px;
        }}
        .header {{
            background-color: #007BFF;
            color: white;
            padding: 10px;
            text-align: center;
            font-size: 20px;
            font-weight: bold;
        }}
        .container {{
            padding: 10px 20px;
        }}
        .section {{
            margin-bottom: 20px;
            background: white;
            padding: 10px 15px;
            border-radius: 6px;
            page-break-inside: avoid;
            font-size: 20px;
        }}
        .info-box p {{
            margin: 4px 0;
        }}
        h3 {{
            color: #007BFF;
            margin-bottom: 10px;
            font-size: 21px;
            border-bottom: 1px solid #007BFF;
            padding-bottom: 3px;
        }}
        table {{
            width: 100%;
            border-collapse: collapse;
            margin-top: 8px;
            font-size: 18px;
        }}
        th, td {{
            border: 1px solid #ccc;
            padding: 6px;
            text-align: center;
        }}
        th {{
            background-color: #e9ecef;
        }}
        tr:nth-child(even) {{
            background-color: #f2f2f2;
        }}
        img {{
            border: 1px solid #ccc;
            border-radius: 4px;
            max-width: 100%;
            height: auto;
            display: block;
        }}
        .row-box {{
            width: 100%;
            overflow: hidden;
            margin-top: 10px;
            page-break-inside: avoid;
        }}
        .box {{
            width: 28%;
            float: left;
            background-color: #e3f2fd;
            border: 1px solid #90caf9;
            border-radius: 5px;
            padding: 10px;
            margin-right: 2.3%;
            text-align: center;
        }}
        .box:last-child {{
            margin-right: 0;
        }}
        .box-title {{
            font-weight: bold;
            color: #0d47a1;
            margin-bottom: 5px;
            font-size: 23px;
        }}
        .box-value {{
            font-size: 26px;
            color: #1565c0;
        }}
        .clear {{
            clear: both;
        }}
        ul {{
            padding-left: 20px;
        }}
        li {{
            margin-bottom: 6px;
        }}
    </style>
</head>
<body>
    <div class="header">Loan Evaluation Report</div>
    <div class="container">

        <div class="section">
            <p><strong>Customer Name:</strong> {customer_name}</p>
            <p><strong>Customer ID:</strong> {customer_id}</p>
        </div>

        <div class="row-box">
            <div class="box">
                <div class="box-title">Loan Eligibility</div>
                <div class="box-value">{loan_eligibility}</div>
            </div>
            <div class="box">
                <div class="box-title">Interest Rate</div>
                <div class="box-value">{interest_rate}%</div>
            </div>
            <div class="box">
                <div class="box-title">Max Loan Amount</div>
                <div class="box-value">â‚¹{max_loan_amount}</div>
            </div>
            <div class="clear"></div>
        </div><br>
    """

    # Add suggestions section if not eligible and suggestions are available
    if loan_eligibility.lower() == "no" and suggestions:
        html_content += f"""
        <div class="section">
            <h3>Suggestions for Loan Ineligibility</h3>
            <ul>
                {''.join(f"<li>{s}</li>" for s in suggestions)}
            </ul>
        </div>
        """

    html_content += f"""
        <div class="section">
            <h3>Interest Rate Component Details</h3>
            {"<table><thead><tr><th>Factor</th><th>Impact</th><th>Score</th></tr></thead><tbody>" +
                "".join(f"<tr><td>{row.get('factor', '')}</td><td>{row.get('impact', '')}</td><td>{row.get('numerical_impact', '')}</td></tr>"
                        for row in reasons_table) +
             "</tbody></table>" if reasons_table else "<p>No data available.</p>"}
        </div>

        <div class="section">
            <h3>Numerical Impact on Interest Rate by Factors</h3>
            {"<img src='data:image/png;base64," + bar_chart_base64 + "' alt='Interest Rate Chart' />" if bar_chart_base64 else "<p>Chart not available.</p>"}
        </div>

    </div>
</body>
</html>
"""

    # PDF conversion setup
    config = Configuration(wkhtmltopdf=r"C:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe")
    options = {
        'page-size': 'A4',
        'encoding': "UTF-8",
        'enable-local-file-access': None
    }

    # Generate PDF
    pdf = pdfkit.from_string(html_content, False, options=options, configuration=config)

    return send_file(
        io.BytesIO(pdf),
        download_name="loan_report.pdf",
        as_attachment=True,
        mimetype="application/pdf"
    )


def generate_emi_pdf():
    buffer = BytesIO()
    p = canvas.Canvas(buffer, pagesize=landscape(A4))
    p.drawString(100, 550, "EMI Schedule PDF")
    p.save()
    buffer.seek(0)
    return send_file(buffer, as_attachment=True, download_name="emi_schedule.pdf", mimetype='application/pdf')
